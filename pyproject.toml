[tool.poetry]
name = "eeg_research"
version = "0.1.0"
description = "All tools and pipelines developed for eeg research"
authors = ["Dr. Samuel Louviot <sam.louvito@gmail.com>",
"Dr. Alp Erkent <alp.erkent@childmind.org>"]
license = "LGPL-3.0"
readme = "README.md"
packages = [{include = "eeg_research", from = "src"}]

[tool.poetry.scripts]
eeg_fmri_cleaning = 'eeg_research.cli.pipelines.eeg_fmri_cleaning:main'

[tool.poetry.dependencies]
python = "~3.12"
simple-term-menu = "^1.6.4"
pybids = "^0.16.4"
mne = "^1.7.1"
numpy = "^2.2"
scipy = "^1.14.0"
matplotlib = "^3.8.4"
asrpy = "^0.0.3"
pyprep = "^0.4.3"
neurokit2 = "^0.2.7"
pybv = "^0.7.5"
eeglabio = "^0.0.2.post4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
mypy = "^1.10.1"
pre-commit = "^3.7.0"
pytest-cov = "^5.0.0"
ruff = "^0.5.1"
ipykernel = "^6.29.5"
pytest-mock = "^3.14.0"

[tool.poetry.group.docs.dependencies]
pdoc = "^14.5.1"

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = [
  "tests"
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
ignore_missing_imports = true
exclude = "^data/"

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
line-length = 88
indent-width = 4
src = ["src"]
target-version = "py311"
extend-exclude = [
  "*.ipynb",
  "src/eeg_research/labs",
  "bids-examples"
]

[tool.ruff.lint]
select = ["ANN", "D", "E", "F", "I"]
ignore = [
  "ANN101",  # self should not be annotated.
  "ANN102"  # cls should not be annotated.
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
